{"ast":null,"code":"// import React, { useState, useEffect, useReducer } from \"react\";\n\n// import Card from \"../UI/Card/Card\";\n// import classes from \"./Login.module.css\";\n// import Button from \"../UI/Button/Button\";\n\n// const emailReducer = (state, action) => {\n//   if (action.type === \"user_input\") {\n//     console.log(action);\n//     console.log(\"emailreducer\");\n//     return { value: action.val, isValid: action.val.includes(\"@\") };\n//   }\n//   if (action.type === \"input_blur\") {\n//     console.log(state);\n//     console.log(\"stateforemail\");\n//     return { value: state.value, isValid: state.value.includes(\"@\") };\n//   }\n//   return { value: \"\", isValid: false };\n// };\n\n// const passwordReducer = (state, action) => {\n//   if (action.type === \"user_input\") {\n//     console.log(action);\n//     console.log(\"passwordinput\");\n//     console.log(action.val.trim());\n//     return { value: action.value, isValid: action.val.trim().length > 6 };\n//   }\n//   if ((action.type = \"input_blur\")) {\n//     console.log(state);\n//     console.log(\"stateforpassword\");\n//     return { value: state.value, isValid: state.value.trim().length > 6 };\n//   }\n//   return { value: \"\", isValid: false };\n// };\n\n// const Login = (props) => {\n//   // const [enteredEmail, setEnteredEmail] = useState(\"\");\n//   // const [emailIsValid, setEmailIsValid] = useState();\n//   // const [enteredPassword, setEnteredPassword] = useState(\"\");\n//   // const [passwordIsValid, setPasswordIsValid] = useState();\n//   const [formIsValid, setFormIsValid] = useState(false);\n\n//   const [emailState, dispatchEmail] = useReducer(emailReducer, {\n//     value: \"\",\n//     isValid: null,\n//   });\n\n//   const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n//     value: \"\",\n//     isValid: null,\n//   });\n\n//   const { isValid: emailIsValid } = emailState;\n//   const { isValid: passwordIsValid } = passwordState;\n//   // useEffect(() => {\n//   //   const interTime = setTimeout(() => {\n//   //     console.log(\"check validity\");\n//   //     setFormIsValid(\n//   //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n//   //     );\n//   //   }, 500);\n//   //   return () => {\n//   //     console.log(\"Clean up\");\n//   //     clearTimeout(interTime);\n//   //   };\n//   // }, [enteredEmail, enteredPassword]);\n\n//   const emailChangeHandler = (event) => {\n//     dispatchEmail({ type: \"user_input\", val: event.target.value });\n//     // setEnteredEmail(emailState.value);\n//   };\n\n//   const passwordChangeHandler = (event) => {\n//     console.log(event.target.value);\n//     dispatchPassword({ type: \"user_input\", val: event.target.value });\n//     // setEnteredPassword(event.target.value);\n//   };\n\n//   const validateEmailHandler = () => {\n//     dispatchEmail({ type: \"input_blur\" });\n//     // setEmailIsValid(emailState.value.includes(\"@\"));\n//   };\n//   const validatePassword = () => {\n//     dispatchPassword({ type: \"input_blur\" });\n//     // setEmailIsValid(emailState.value.includes(\"@\"));\n//   };\n\n//   // const validatePasswordHandler = () => {\n//   //   dispatchPassword({ type: \"input_blur\" });\n\n//   //   // setPasswordIsValid(enteredPassword.trim().length > 6);\n//   // };\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     console.log(emailState);\n//     console.log(passwordState);\n//     props.onLogin(emailState.value, passwordState.value);\n//   };\n\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         <div\n//           className={`${classes.control} ${\n//             emailState.isValid === false ? classes.invalid : \"\"\n//           }`}\n//         >\n//           <label htmlFor=\"email\">E-Mail</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={emailState.value}\n//             isValid={emailIsValid}\n//             onChange={emailChangeHandler}\n//             onBlur={validateEmailHandler}\n//           />\n//         </div>\n//         <div\n//           className={`${classes.control} ${\n//             passwordState.isValid === false ? classes.invalid : \"\"\n//           }`}\n//         >\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             isValid={passwordIsValid}\n//             value={passwordState.value}\n//             onChange={passwordChangeHandler}\n//             onBlur={validatePassword}\n//           />\n//         </div>\n//         <div className={classes.actions}>\n//           <Button\n//             type=\"submit\"\n//             className={classes.btn}\n//             disabled={!emailIsValid || !passwordIsValid}\n//           >\n//             Login\n//           </Button>\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["/Users/nipunpatel/Downloads/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["// import React, { useState, useEffect, useReducer } from \"react\";\n\n// import Card from \"../UI/Card/Card\";\n// import classes from \"./Login.module.css\";\n// import Button from \"../UI/Button/Button\";\n\n// const emailReducer = (state, action) => {\n//   if (action.type === \"user_input\") {\n//     console.log(action);\n//     console.log(\"emailreducer\");\n//     return { value: action.val, isValid: action.val.includes(\"@\") };\n//   }\n//   if (action.type === \"input_blur\") {\n//     console.log(state);\n//     console.log(\"stateforemail\");\n//     return { value: state.value, isValid: state.value.includes(\"@\") };\n//   }\n//   return { value: \"\", isValid: false };\n// };\n\n// const passwordReducer = (state, action) => {\n//   if (action.type === \"user_input\") {\n//     console.log(action);\n//     console.log(\"passwordinput\");\n//     console.log(action.val.trim());\n//     return { value: action.value, isValid: action.val.trim().length > 6 };\n//   }\n//   if ((action.type = \"input_blur\")) {\n//     console.log(state);\n//     console.log(\"stateforpassword\");\n//     return { value: state.value, isValid: state.value.trim().length > 6 };\n//   }\n//   return { value: \"\", isValid: false };\n// };\n\n// const Login = (props) => {\n//   // const [enteredEmail, setEnteredEmail] = useState(\"\");\n//   // const [emailIsValid, setEmailIsValid] = useState();\n//   // const [enteredPassword, setEnteredPassword] = useState(\"\");\n//   // const [passwordIsValid, setPasswordIsValid] = useState();\n//   const [formIsValid, setFormIsValid] = useState(false);\n\n//   const [emailState, dispatchEmail] = useReducer(emailReducer, {\n//     value: \"\",\n//     isValid: null,\n//   });\n\n//   const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n//     value: \"\",\n//     isValid: null,\n//   });\n\n//   const { isValid: emailIsValid } = emailState;\n//   const { isValid: passwordIsValid } = passwordState;\n//   // useEffect(() => {\n//   //   const interTime = setTimeout(() => {\n//   //     console.log(\"check validity\");\n//   //     setFormIsValid(\n//   //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n//   //     );\n//   //   }, 500);\n//   //   return () => {\n//   //     console.log(\"Clean up\");\n//   //     clearTimeout(interTime);\n//   //   };\n//   // }, [enteredEmail, enteredPassword]);\n\n//   const emailChangeHandler = (event) => {\n//     dispatchEmail({ type: \"user_input\", val: event.target.value });\n//     // setEnteredEmail(emailState.value);\n//   };\n\n//   const passwordChangeHandler = (event) => {\n//     console.log(event.target.value);\n//     dispatchPassword({ type: \"user_input\", val: event.target.value });\n//     // setEnteredPassword(event.target.value);\n//   };\n\n//   const validateEmailHandler = () => {\n//     dispatchEmail({ type: \"input_blur\" });\n//     // setEmailIsValid(emailState.value.includes(\"@\"));\n//   };\n//   const validatePassword = () => {\n//     dispatchPassword({ type: \"input_blur\" });\n//     // setEmailIsValid(emailState.value.includes(\"@\"));\n//   };\n\n//   // const validatePasswordHandler = () => {\n//   //   dispatchPassword({ type: \"input_blur\" });\n\n//   //   // setPasswordIsValid(enteredPassword.trim().length > 6);\n//   // };\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     console.log(emailState);\n//     console.log(passwordState);\n//     props.onLogin(emailState.value, passwordState.value);\n//   };\n\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         <div\n//           className={`${classes.control} ${\n//             emailState.isValid === false ? classes.invalid : \"\"\n//           }`}\n//         >\n//           <label htmlFor=\"email\">E-Mail</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={emailState.value}\n//             isValid={emailIsValid}\n//             onChange={emailChangeHandler}\n//             onBlur={validateEmailHandler}\n//           />\n//         </div>\n//         <div\n//           className={`${classes.control} ${\n//             passwordState.isValid === false ? classes.invalid : \"\"\n//           }`}\n//         >\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             isValid={passwordIsValid}\n//             value={passwordState.value}\n//             onChange={passwordChangeHandler}\n//             onBlur={validatePassword}\n//           />\n//         </div>\n//         <div className={classes.actions}>\n//           <Button\n//             type=\"submit\"\n//             className={classes.btn}\n//             disabled={!emailIsValid || !passwordIsValid}\n//           >\n//             Login\n//           </Button>\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n\n// export default Login;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}